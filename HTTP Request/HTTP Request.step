{"creationTimeStamp":"2024-09-05T10:01:50.401Z","modifiedTimeStamp":"2024-10-15T11:38:06.388Z","createdBy":"viyademo01","modifiedBy":"viyademo01","name":"HTTP Request.step","displayName":"HTTP Request.step","localDisplayName":"HTTP Request.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d"},{"method":"POST","rel":"copy","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d/copy","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d/copy","responseType":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","uri":"/dataFlows/steps/6410a254-9f7b-46b8-aefc-bc7e90d7e06d","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"_inputtable","displayName":"_inputtable","localDisplayName":"_inputtable","minEntries":0,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[{"name":"_outputtable","displayName":"_outputtable","localDisplayName":"_outputtable","minEntries":0,"maxEntries":1,"defaultEntries":0,"type":"table","supportsView":false,"requiresStructure":false}]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"HTTPRequest\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"HTTP Request\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_inputtable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input Table:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_outputtable\",\n\t\t\t\t\t\"type\": \"outputtable\",\n\t\t\t\t\t\"label\": \"Output Table:\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_url\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"URL:\",\n\t\t\t\t\t\"placeholder\": \"insert fully qualified URL\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\tfalse\n\t\t\t\t\t],\n\t\t\t\t\t\"regexp\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_SASServiceURL\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"SAS Viya Service:\",\n\t\t\t\t\t\"placeholder\": \"insert relative-URL (e.g.: /referenceData/domains)\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\ttrue\n\t\t\t\t\t],\n\t\t\t\t\t\"regexp\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_isSASServiceURL\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Above specified URL is a relative-URL and points to a SAS Viya service\",\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"indent\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"link3\",\n\t\t\t\t\t\"type\": \"link\",\n\t\t\t\t\t\"label\": \"See available SAS Viya Services\",\n\t\t\t\t\t\"url\": \"https://developer.sas.com/rest-apis\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$_showHyperlinks\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t],\n\t\t\t\t\t\"indent\": 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_method\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Method:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"GET\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"POST\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"PUT\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"DELETE\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"HEAD\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"TRACE\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"PATCH\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"CONNECT\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_payload\",\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"label\": \"Payload:\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"$_method\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"POST\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"$_method\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"PUT\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"|\",\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"$_method\",\n\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\"PATCH\"\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"InputOptions\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Input Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section6\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Headers\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLineCnt\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Header Lines:\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": 8,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_0\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t4\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t5\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_6\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerLine_7\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"'header key' = 'value'\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerLineCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t7\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section7\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Authorization\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_authtype\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Auth Type:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"No Auth\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"Basic Auth\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"Bearer Token\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_authtypeInternal\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Auth Type:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"SAS Viya Service\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1,\n\t\t\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_username\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Username:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_authtype\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\"Basic Auth\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_password\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Password:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_authtype\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\"Basic Auth\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_bearer_token\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Token:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_authtype\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\"Bearer Token\"\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"&\",\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"$_isSASServiceURL\",\n\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 2\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section5\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Timeout\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text7\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"The number of seconds of inactivity to wait before cancelling the HTTP request. 0 indicates no timeout.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_timeout\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"integer\": false,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"OutputOptions\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Output Options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section9\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Output Body\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section3\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Table\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 1,\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"Output HTTP result to step output table.\\nMap the fields from output json structure to output table column.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_fieldMapping\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Field Mapping:\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"json structure | coulmn name\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_fieldNotFoundMsg\",\n\t\t\t\t\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\t\t\t\t\"label\": \"If field could not get mapped:\",\n\t\t\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"No Message\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"Show Warning\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"value\": \"Show Error\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"link1\",\n\t\t\t\t\t\t\t\t\t\"type\": \"link\",\n\t\t\t\t\t\t\t\t\t\"label\": \"See documentation for information on how use Field Mapping.\",\n\t\t\t\t\t\t\t\t\t\"url\": \"https://github.com/sassoftware/sas-studio-custom-steps/tree/main/HTTP%20Request#fieldmapping-\",\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$_showHyperlinks\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_mergeInOut\",\n\t\t\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Add input columns to output table\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_outputToMacro\",\n\t\t\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Create macro for output column\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_macros\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Columns being mapped to macros:\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$_outputToMacro\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Library\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 1,\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"The URL JSON output can be put into a SAS library using the SAS JSON libname engine.\\nSet the name of the SAS library to receive the JSON output data. The name can be max 8 characters long.\\n\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_httpoutLib\",\n\t\t\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Write URL JSON output to SAS library\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\t\t\"indent\": 0\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_httpout\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Output Library:\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\t\t\"indent\": 0,\n\t\t\t\t\t\t\t\t\t\"regexp\": \"[a-zA-Z0-9]{1,8}\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section2\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Folder\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 1,\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"Set the output folder and file name to receive the native json result from the HTTP request.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_http_output_dir\",\n\t\t\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\t\t\"label\": \"HTTP Output Folder:\",\n\t\t\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"Select folder on SAS Server\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"_outputName\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\t\t\"label\": \"HTTP Output File Name:\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"httpoutAll\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section4\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Header Mapping\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"indent\": 0,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text6\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Map HTTP result hearder information to SAS macro variable.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_tagCaseSensetive\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Tag name is case sensitive\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMappingCnt\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"Header Mappings:\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": 10,\n\t\t\t\t\t\t\t\"stepsize\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_0\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_1\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_2\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_3\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t3\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_4\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t4\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_5\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t5\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_6\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t6\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_7\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t7\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_8\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t8\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_headerMapping_9\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"\",\n\t\t\t\t\t\t\t\"placeholder\": \"Header Tag : Macro Variable Name\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$_headerMappingCnt\",\n\t\t\t\t\t\t\t\t\">\",\n\t\t\t\t\t\t\t\t9\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section8\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Options\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"_debugLevel\",\n\t\t\t\t\t\t\t\"type\": \"numstepper\",\n\t\t\t\t\t\t\t\"label\": \"HTTP Debug Level:\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"integer\": true,\n\t\t\t\t\t\t\t\"min\": 0,\n\t\t\t\t\t\t\t\"max\": 3,\n\t\t\t\t\t\t\t\"stepsize\": 1,\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Settings\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text10\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"By default hyper-links in steps are disabled. SAS Viya administrators can use SAS Environment Manager \\nto enable this functionality and to specify the validation rules for links.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section10\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"For more information see Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text12\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"https://github.com/sassoftware/sas-studio-custom-steps/tree/main/HTTP%20Request#settings-tab\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"_showHyperlinks\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Show hyperlinks in step\",\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"indent\": 1\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text4\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"HTTP Request\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text5\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"The HTTP Request step allows you to send HTTP/1.1 requests. \\nThe step is using PROC HTTP to execute the HTTP requests. \\nYou can use this step to validate data, enrich data in your data flow, update data via a REST call and more. \\nThere are various ways to receive data from the HTTP Request in order to use the HTTP result downstream in Studio Flow.\",\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"indent\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text8\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"See HTTP Request Documentation for information and examples how to use the step.\",\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"indent\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"link2\",\n\t\t\t\t\t\"type\": \"link\",\n\t\t\t\t\t\"label\": \"HTTP Request Documentation\",\n\t\t\t\t\t\"url\": \"https://github.com/sassoftware/sas-studio-custom-steps/tree/main/HTTP%20Request\",\n\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\"$_showHyperlinks\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\ttrue\n\t\t\t\t\t],\n\t\t\t\t\t\"indent\": 2\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section12\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Requirements\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text11\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"*  SAS Viya 2024.06 or later.\\n*  Python needs to be installed and configured to work with SAS Studio.\\n*  Link Control validation rules need to be configured to use the hyper-links in the Step UI. For more information see step documentation.\\n*  SAS Viya environment needs to be set up to allow calling SAS Viya services from within SAS Studio. For more information see step documentation.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section11\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Change Log\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text9\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Version 1.0 (14OCT2024)\\n  *  Initial version\",\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"indent\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"_inputtable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"_outputtable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"_url\": \"\",\n\t\t\"_SASServiceURL\": \"\",\n\t\t\"_isSASServiceURL\": false,\n\t\t\"_method\": {\n\t\t\t\"value\": \"GET\"\n\t\t},\n\t\t\"_payload\": \"\",\n\t\t\"_headerLineCnt\": 0,\n\t\t\"_headerLine_0\": \"\\\"Content-Type\\\"=\\\"application/json\\\"\",\n\t\t\"_authtype\": {\n\t\t\t\"value\": \"No Auth\"\n\t\t},\n\t\t\"_authtypeInternal\": {\n\t\t\t\"value\": \"SAS Viya Service\"\n\t\t},\n\t\t\"_username\": \"\",\n\t\t\"_password\": \"\",\n\t\t\"_bearer_token\": \"\",\n\t\t\"_timeout\": 0,\n\t\t\"_fieldMapping\": \"\",\n\t\t\"_fieldNotFoundMsg\": {\n\t\t\t\"value\": \"No Message\"\n\t\t},\n\t\t\"_mergeInOut\": false,\n\t\t\"_outputToMacro\": false,\n\t\t\"_macros\": \"\",\n\t\t\"_httpoutLib\": false,\n\t\t\"_httpout\": \"HTTPOUT\",\n\t\t\"_http_output_dir\": \"\",\n\t\t\"_outputName\": \"httpoutAll\",\n\t\t\"_tagCaseSensetive\": false,\n\t\t\"_headerMappingCnt\": 0,\n\t\t\"_headerMapping_1\": \"\",\n\t\t\"_debugLevel\": 0,\n\t\t\"_showHyperlinks\": false\n\t}\n}","templates":{"SAS":"/***************************************************************************\n* Custom Step: HTTP Request\n* --------------------------------------------------------------------------\n* This custom step executes HTTP requests for methods:\n* GET, PUT, POST, DELETE, HEAD, TRACE, PATCH, OPTION, CONNECT \n* --------------------------------------------------------------------------\n* Note: Macros starting with an underscore contain UI variable values\n****************************************************************************/\n/* ----------------------------------------------------------------------- */\n/* Check if an error returned and output appropriate message               */ \n/* The message can be a warning or error. In case of error an              */\n/* the job will stop.                                                      */\n/* ----------------------------------------------------------------------- */\n%macro checkError();\n\t%if &mapKeyError = W %then %do;\n\t\tdata _null_;\n\t\t\tfile print;\t\n\t\t\tput 'WARNING: Could not map field!';\n\t\t\tput \"&mapKeyErrorMsg\";\n\t\t\tput \"&mapKeyErrorMsg2\";\n\t\trun;\n\t\tdata _null_;\n\t\t\tput 'WARNING: Could not map field!';\n\t\t\tput \"&mapKeyErrorMsg\";\n\t\t\tput \"&mapKeyErrorMsg2\";\n\t\trun;\n\t%end;\n\t%if &mapKeyError = E %then %do;\n\t\tdata _null_;\n\t\t\tfile print;\t\n\t\t\tput \"ERROR: Error in field mapping!\";\n\t\t\tput \"&mapKeyErrorMsg\";\n\t\t\tput \"&mapKeyErrorMsg2\";\n\t\t\terror \"ERROR: Error in field mapping!\";\n\t\t\tabort;\n\t\trun;\n\t%end;\n%mend checkError;\n\n\n/* ----------------------------------------------------------------------- */\n/* Check http status. If an error occurs stop the job and print message.   */\n/* ----------------------------------------------------------------------- */\n%macro checkHTTPStatus();\n%put check checkHTTPStatus;\n\t%if %symexist(SYS_PROCHTTP_STATUS_CODE) %then %do;\n\t\t%if &SYS_PROCHTTP_STATUS_CODE >= 300 %then %do;\n\t\t\t/* we call combineHTTPOutput here so we can make the json output available as it might show more error information */\n\t\t\t%combineHTTPOutput();\n\t\t\t/*show that there is an error and stop the job */\n\t\t\tdata _null_;\n\t\t\t\tfile print;\t\n\t\t\t\tput \"ERROR: Could not execute HTTP request!\";\n\t\t\t\tput \"HTTP Status: &SYS_PROCHTTP_STATUS_CODE Message: &SYS_PROCHTTP_STATUS_PHRASE\";\n\t\t\t\tput \"---\";\n\t\t\t\tput \"In step configuration go to \"\"Output Options tab -> Output Body -> Output Folder\"\" and set output folder for HTTP output file.\";\n\t\t\t\tput \"The file may contain more information if it exists!\";\n\t\t\t\terror \"ERROR: Could not execute HTTP request! HTTP Status: &SYS_PROCHTTP_STATUS_CODE Message: &SYS_PROCHTTP_STATUS_PHRASE\";\n\t\t\t\terror \"In step configuration go to \"\"Output Options tab -> Output Body -> Output Folder\"\" and set output folder for HTTP output file.\";\n\t\t\t\terror \"The file may contain more information if it exists!\";\n\t\t\t\tabort;\n\t\t\trun;\n\t\t%end;\n\t%end;\n%mend checkHTTPStatus;\n\n\n/* ----------------------------------------------------------------------- */\n/* If set in the ui map the output column to macros. The macros have       */\n/* the same names as the columns. Only the first row will be mapped        */\n/* ----------------------------------------------------------------------- */\n%macro mapMacros();\n\t/* make the macros global. Have to do it in a loop as the macrolist is comma separated */\n\t%let macName=.;\n\t%let i=1;\n\t%do %until (&macName = );\n\t\t%let macName= %scan(&_macros, &i);\n\t\t%let i=%eval(&i+1);\n\t\t%if &macName ~= %then %do;\n\t\t\t%global &macName;\n\t\t%end;\n\t%end;\n\n\tdata all;\n\t\tset &_outputtable;\n\n\t\t%let macName=.;\n\t\t%let i=1;\n\t\t%do %until (&macName = );\n\t\t\t%let macName= %scan(&_macros, &i);\n\t\t\t%let i=%eval(&i+1);\n\t\t\t%if &macName ~= %then %do;\n\t\t\t\t/* we only map the first row of the result set to macros */\n\t\t\t\tif _n_ = 1 then\n\t\t\t\t\tcall symput(\"&macName\", &macName);\n\t\t\t%end;\n\t\t%end;\n\trun;\n%mend mapMacros;\n\n/* ----------------------------------------------------------------------- */\n/* Generate the url for internal SAS Viya API calls                        */\n/* ----------------------------------------------------------------------- */\n%macro generateInternalUrl();\n\t/* get the local server name */\n\t%let viyaHost=%sysfunc(getoption(SERVICESBASEURL));\n\t/* set server and URI */\n\tdata _null_;\n\t\turl= cats(\"&viyaHost\", \"&_SASServiceURL\");\n\t\tcall symputx('_url', url);\n\t\tput url=;\n\trun;\n%mend generateInternalUrl;\n\n\n/* ----------------------------------------------------------------------- */\n/* Map the HTTP result to coulmns in a table according to the field mapping*/ \n/* from UI &_fieldMapping.                                                 */\n/* ----------------------------------------------------------------------- */\n%macro mapHTTPToColumns();\n\n\t/* we prepare the &_fieldMapping first. We concatenate all input lines      */ \n    /* and separate them with a comma (,). This way we can prevent an error     */\n    /* if the user forgot to put a comma at the end on the input line in the UI. */\n\t%if %symexist(_fieldMapping_count) %then %do;\n\t\t%let _fieldMapping=;\n\t\t%let i= 1;\n\t\t%do %until(&i > &_fieldMapping_count);\n\t    \t%let _fieldMapping= &_fieldMapping &&_fieldMapping_&i,;\n\t\t\t%let i= %eval(&i + 1);\n\t\t%end;\n\t%end;\n\n\tfilename PCODE TEMP;\n\tdata _null_;\n\t\tfile PCODE;\n\t\tput \"import pandas as pd\";\n\t\tput \"import json\";\n\t\tput \" \";\n\t\tput \"moveTableToSAS= True\";\n\t\tput \"SAS.symput('mapKeyError_','No')\";\n\t\tput \"SAS.symput('mapKeyErrorMsg_', '')\";\n\t\tput \"SAS.symput('mapKeyErrorMsg2_', '')\";\n\t\tput \" \";\n\t\tput \"httpoutFiles= SAS.symget('outputFolder')\";\n\t\tput \"httpoutAllFile= SAS.symget('_outputName')\";\n\t\tput \"fieldMapping= SAS.symget('_fieldMapping')\";\n\t\tput \"outputTable= SAS.symget('_outputtable')\";\n\t\tput \"fieldNotFoundMsg= SAS.symget('_fieldNotFoundMsg')\";\n\t\tput \" \";\n\t\tput \"try:\";\n\t\tput \"    with open(httpoutFiles +\"\"/\"\" +httpoutAllFile +\"\".json\"\", 'r') as fHttpAll:\";\n\t\tput \"        httpResultAll= json.load(fHttpAll)\";\n\t\tput \"except:\";\n\t\tput \"    httpResultAll= {}\";\n\t\tput \" \";\n\t\tput \"###print(fieldMapping) \";\n\t\tput \"fieldMap1= []\";\n\t\tput \"for map in fieldMapping.replace('\\n',',').split(','):\";\n\t\tput \"    map= map.strip()\";\n\t\tput \"    if len(map) > 0:\";\n\t\tput \"        fieldMap1.append(map)\";\n\t\tput \"fieldMap2= []\";\n\t\tput \"#put the field mapping row \"\"columns\"\" in a list and remove leaning and trailing blanks\";\n\t\tput \"for row in fieldMap1:\";\n\t\tput \"    fieldMap2.append(row.replace(' ','').split('|')) \";\n\t\tput \" \";\n\t\tput \"#get column names\";\n\t\tput \"columns= []\";\n\t\tput \"for mapField in fieldMap2:\";\n\t\tput \"    #if the first char is # we ignore the row\";\n\t\tput \"    if mapField[0].strip()[0][0] != '#':\";\n\t\tput \"        try: \";\n\t\tput \"            columns.append(mapField[1])\";\n\t\tput \"            if len(mapField) != 2:\";\n\t\tput \"                print('Error in field mapping!')\";\n\t\tput \"                print('Did you forget a comma? Check field mapping structure.')\";\n\t\tput \"                SAS.symput('mapKeyError_','E')\";\n\t\tput \"                SAS.symput('mapKeyErrorMsg_', 'Error in field mapping!')\";\n\t\tput \"                SAS.symput('mapKeyErrorMsg2_', 'Did you forget a comma? Check field mapping structure.')\";\n\t\tput \"                moveTableToSAS= False\";\n\t\tput \"        except:\";\n\t\tput \"            print('Error in field mapping!')\";\n\t\tput \"            print('Check field mapping structure.')\";\n\t\tput \"            SAS.symput('mapKeyError_','E')\";\n\t\tput \"            SAS.symput('mapKeyErrorMsg_', 'Error in field mapping!')\";\n\t\tput \"            SAS.symput('mapKeyErrorMsg2_', 'Check field mapping structure.')\";\n\t\tput \"            moveTableToSAS= False\";\n\t\tput \" \";\n\t\tput \"rows= []\";\n\t\tput \"errorKeys= '' #variable to capture any key from the mapping if we cannot find them\";\n\t\tput \"for rowNum in httpResultAll:\";\n\t\tput \"    httpResult= httpResultAll[rowNum]\";\n\t\tput \" \";\n\t\tput \"    row= []\";\n\t\tput \"    #go through field maps, read the data for each field and put it in the variables\";\n\t\tput \"    for mapField in fieldMap2:\";\n\t\tput \"        #if the first char is # we ignore the row\";\n\t\tput \"        if mapField[0].strip()[0][0] != '#':\";\n\t\tput \"            #split the field path and put in a list\";\n\t\tput \"            mappingKey= mapField[0].split('/')\";\n\t\tput \" \";\n\t\tput \"            l= len(mappingKey) #read how deep the field path is\";\n\t\tput \"            for i in range(l):\";\n\t\tput \"                #if the fieldpath level is a number we convert it into an int variable\";\n\t\tput \"                try:\";\n\t\tput \"                    mappingKey[i]= int(mappingKey[i])\";\n\t\tput \"                except:\";\n\t\tput \"                    pass\";\n\t\tput \" \";\n\t\tput \"            #copy the field we want to select into \"\"inputDataField\"\"\";\n\t\tput \"            inputDataField= httpResult\";\n\t\tput \" \";\n\t\tput \"            printError= True #we only want to print the error once per field mapping structure\";\n\t\tput \"            for key in mappingKey:\";\n\t\tput \"                try:\";\n\t\tput \"                    inputDataField= inputDataField[key]\";\n\t\tput \"                except:\";\n\t\tput \"                    if printError:\";\n\t\tput \"                        print(f\"\"Cannot find key >{str(key)}< from mapping >{mapField[0]}< in row {str(rowNum)}\"\")\";\n\t\tput \"                        print(\"\"Row ==> \"\" +str(httpResult))\";\n\t\tput \"                        printError= False\";\n\t\tput \"                        errorKeys+= f'>{mapField[0]}< '\";\n\t\tput \" \";\n\t\tput \"                    SAS.symput('mapKeyErrorMsg_', f\"\"Cannot find key(s) {errorKeys}in URL JSON return structure.\"\")\";\n\t\tput \"                    SAS.symput('mapKeyErrorMsg2_', 'See log more more info!')\";\n\t\tput \"                    if fieldNotFoundMsg == 'Show Error':\";\n\t\tput \"                        SAS.symput('mapKeyError_','E')\";\n\t\tput \"                        moveTableToSAS= False\";\n\t\tput \"                    elif fieldNotFoundMsg == 'Show Warning':\";\n\t\tput \"                        inputDataField= ''\";\n\t\tput \"                        SAS.symput('mapKeyError_','W')\";\n\t\tput \"                        inputDataField= ''\";\n\t\tput \"                    else:\";\n\t\tput \"                        inputDataField= ''\";\n\t\tput \"            row.append(inputDataField)\";\n\t\tput \"    rows.append(row)\";\n\t\tput \" \";\n\t\tput \"# Create the pandas DataFrame\";\n\t\tput \"if moveTableToSAS:\";\n\t\tput \"    df = pd.DataFrame(rows, columns=columns)\";\n\t\tput \"    SAS.df2sd(df, outputTable)\";\n\trun;\n\t\n\tproc python infile= PCODE; quit;\n\tfilename PCODE clear;\n\n\t%global mapKeyError; \n\t%global mapKeyErrorMsg mapKeyErrorMsg2;\n\t%let mapKeyError= &mapKeyError_;\n\t%let mapKeyErrorMsg= %nrbquote(&mapKeyErrorMsg_);\n\t%let mapKeyErrorMsg2= %nrbquote(&mapKeyErrorMsg2_);\n\n%mend mapHTTPToColumns;\n\n\n/* ----------------------------------------------------------------------- */\n/* Create SAS lib for the http output                                      */\n/* ----------------------------------------------------------------------- */\n%macro outputToLibrary();\n\t/* if in the UI is set to output to SAS library */\n\t%if &_httpoutLib = 1 %then %do;\n\t\tfilename httpout \"&outputFolder./&_outputName..json\";\n\n\t\tlibname &_httpout JSON fileref=httpout NOALLDATA;\n\t%end;\n%mend outputToLibrary;\n\n\n/* ----------------------------------------------------------------------- */\n/* Build dynamic URL/Payload and put it into macro variable parsedString.  */\n/* The parameters in the URL/Payload need to match the column names of the */\n/* input table. E.g. Parameter @ASD@ = column name ASD                     */\n/* The value of the macro variable is a SAS cats() statement.              */\n/* When the statement is executed the parameters are replaced              */\n/* with column values                                                      */\n/* ----------------------------------------------------------------------- */\n%macro setParamaters(stringToParse_);\n\t%let stringToParse= &stringToParse_;\n\n\tfilename PCODE TEMP;\n\t/* Python script to build the dynamic URL */\n\tdata _null_;\n\t\tfile PCODE;\n\t\tput \"import re\";\n\t\tput \"inputStr= SAS.symget('stringToParse')\";\n\t\tput \"#need to escape singel quote (with 4 quotes!!) to prevent errors downstream in SAS environment \";\n\t\tput \"inputStr= inputStr.replace(\"\"'\"\", \"\"''''\"\")\t\";\n\t\tput \"outputStr= ''\";\n\t\tput \"  \";\n\t\tput \"#need to replace '&' with & as only using & will trigger a SAS macro\";\n\t\tput \"inputStr= inputStr.replace(\"\"&.\"\", \"\"&\"\")\";\n\t\tput \"  \";\n\t\tput \"regex = r'@[A-Za-z0-9_]*@'\";\n\t\tput \"matches= re.finditer(regex, inputStr, re.IGNORECASE | re.MULTILINE)\";\n\t\tput \" \";\n\t\tput \"#find the parameters and assemble the output line\";\n\t\tput \"start=0\";\n\t\tput \"end=0\";\n\t\tput \"outputStr= \"\"cats(\"\"\";\n\t\tput \"for match in matches:\";\n\t\tput \"    end= match.start()\";\n\t\tput \"    outputStr+= \"\"'\"\" +inputStr[start:end] +\"\"', \"\" +inputStr[match.start()+1:match.end()-1] +\"\", \"\"\";\n\t\tput \"    start= match.end()\";\n\t\tput \"#add the rest after the last parameter and close the cats statement     \";\n\t\tput \"outputStr+= \"\"'\"\" +inputStr[start:] +\"\"')\"\" \";\n\t\tput \" \";\n\t\tput \"SAS.symput('parsedString_', outputStr)\t\";\n\t\tput \"###print(\"\"parsedString=\"\" +outputStr) \";\n\trun;\n\n\tproc python infile= PCODE; quit;\n\tfilename PCODE clear;\n\n\t%global parsedString;\n\t%let parsedString= &parsedString_;\n%mend setParamaters;\n\n\n/* ----------------------------------------------------------------------- */\n/* make http call.                                                         */\n/* we give each json file a number (rowNum) for each row in the table      */\n/* ----------------------------------------------------------------------- */\n%macro executeHTTP(rowNum);\n\tfilename hdinfo '/tmp/hdinfo.txt';\n\n\t/* we need to rewrite the headerLine macros as otherwise we get an error */\n\t%let i=0;\n\t%do %while(&i < &_headerLineCnt);\n\t\tdata _null_;\n\t\t\tlength headerLine $250;\n\t\t\t/* we need to call the macro differently depending if there is an input table ot not */\n\t\t\t%if &isInputTable = Yes %then %do;\n\t\t\t\theaderLine= %quote('&&_headerLine_&i');\n\t\t\t%end;\n\t\t\t%else %do;\n\t\t\t\theaderLine= \"&&_headerLine_&i\";\n\t\t\t%end;\n\t\t\tcall symput(\"_headerLine_&i\", headerLine);\n\t\trun;\n\t\t%let i= %eval(&i+1);\n\t%end;\n\n\t%if &_debugLevel > 0 %then %do;\n\t\t%put URL: &exe_url;\n\t\t%if %symexist(exe_payload) and (&_method = PUT or &_method = POST or &_method = PATCH) %then %do;\n\t\t\t%put Payload: &exe_payload;\n\t\t%end;\n\t%end;\n\n\t/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\t/* HTTP Request                              */\n\t/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/\n\tfilename httpout \"/tmp/httpout&rowNum..json\";\n\tproc http\n\t\tmethod= \"&_method\"\n\t\turl= &exe_url \n\n\t\t%if %symexist(exe_payload) and (&_method = PUT or &_method = POST or &_method = PATCH) %then %do;\n\t\t\tin= &exe_payload\n\t\t%end;\n\n\t\tout= httpout\n\t\theaderout= hdinfo\n\n\t\t/*if we call a SAS Service and they are not enabled in SAS Studio we set a timeout for 10 sec to not to wait too long */ \n\t\t/*the Viya admin can enable SAS Services to be reached from SAS Studio */ \n\t\t%if &_isSASServiceURL = 1 %then %do;\n\t\t\t%put If \"ERROR: HTTP Operation Timed Out.\" occurs check with SAS Viya administrator if calling SAS Viya services from SAS Studio is enabled.;\n\t\t\ttimeout= 10\n\t\t%end;\n\t\t%else %do;\n\t\t\ttimeout= &_timeout.\n\t\t%end;\n\n\t\tCLEAR_CACHE \n\n\t\t%if &_authtype = Basic Auth %then %do;\n\t\t\tusername= \"&_username\"\n\t\t\tpassword= \"&_password\"\n\t\t%end;\n\n\n\t\t%if &_authtype = Bearer Token %then %do;\n\t\t\t/* in case there are leading or trailing blanks coming in from the UI we need to get rid of them */\n\t\t\toauth_bearer= %tslit(%sysFunc(strip(&_bearer_token)))\n\t\t%end;\n\n\t\t%if &_isSASServiceURL = 1 %then %do;\n\t\t\toauth_bearer= sas_services\n\t\t%end;\n\t\t;\n\t \theaders \n\n\t\t%let i= 0;\n\t\t%do %while (&i < &_headerLineCnt);\n\t\t\t&&_headerLine_&i \n\t\t\t%let i= %eval(&i+ 1);\n\t\t%end;\n\t\t;\n\t\tdebug level= &_debugLevel;\n\t\tquit;\n%mend executeHTTP;\n\n\n/* ----------------------------------------------------------------------- */\n/* combine the output from all http calls into one json file               */\n/* we have several http calls if we have several rows in the input table   */\n/* In this case we put the result from all calls into one json file.       */\n/* ----------------------------------------------------------------------- */\n%macro combineHTTPOutput();\n\tfilename PCODE TEMP;\n\tdata _null_;\n\t\tfile PCODE;\n\t\tput \"import json\";\n\t\tput \"import os\";\n\t\tput \"httpoutFiles= SAS.symget('outputFolder')\";\n\t\tput \"httpoutAllFile= SAS.symget('_outputName')\";\n\t\tput \"debugLevel= int(SAS.symget('_debugLevel'))\";\n\t\tput \"try:\";\n\t\tput \"    filesCnt= int(SAS.symget('rowCnt'))\";\n\t\tput \"except:\";\n\t\tput \"    filesCnt= 0\";\n\t\tput \"httpAll={}\";\n\t\tput \" \";\n\t\tput \"for i in range(filesCnt):\";\n\t\tput \"    try:\";\n\t\tput \"        with open(f'/tmp/httpout{i+1}.json', 'r') as fHttp:\";\n\t\tput \"            httpOut= json.load(fHttp)\";\n\t\tput \"            httpAll['R' +str(i+1)]= httpOut\";\n\t\tput \"    except:\";\n\t\tput \"        httpAll[i+1]= {}\";\n\t\tput \" \";\n\t\tput \"if debugLevel == 0:\";\n\t\tput \"    for i in range(filesCnt):\";\n\t\tput \"        try:\";\n\t\tput \"            os.remove(f'/tmp/httpout{i+1}.json')\";\t\n\t\tput \"        except:\";\n\t\tput \"            continue\";\n\t\tput \" \";\n\t\tput \"httpAllJson= json.dumps(httpAll)\";\n\t\tput \"with open(httpoutFiles +f'/{httpoutAllFile}.json', 'w') as fHttpAll:\";\n\t\tput \"    fHttpAll.write(httpAllJson)\";\n\trun;\n\n\tproc python infile= PCODE; quit;\n\tfilename PCODE clear;\n%mend combineHTTPOutput;\n\n\n/* ----------------------------------------------------------------------- */\n/* call http for each row in the input table.                              */\n/* ----------------------------------------------------------------------- */\n%macro callRequestForInputTable();\n\tdata _null_;\n\t\tset &_inputtable end= _last_;\n\t\t\n\t\trowNum= _n_; \n\t\turl= &url; /* &url can either be the generated or the original url. */\n\t\tcall symput(\"exe_url\", cats(\"'\", trim(url), \"'\"));\n\n\t\t%if &_method = PUT or &_method = POST or &_method = PATCH %then %do;\n\t\t\tpayload= &payload;  /* &payload can either be the generated or the original payload */\n\n\t\t\tcall symput(\"exe_payload\", cats(\"'\", trim(payload), \"'\"));\n\t\t%end;\n\n\t\t/* execute macro */\n\t\texecuteHTTP= cats('%executeHTTP(', rowNum, ')');\n\t\tcall execute(executeHTTP); /* %executeHTTP() */\n\n\t\tif _last_ then\n\t\t\tcall symput(\"rowCnt\", _n_); /* need to know how many rows we processed */\n\trun;\n%mend callRequestForInputTable;\n\n\n/* ----------------------------------------------------------------------- */\n/* merge the columns from the input table with the columns from            */\n/* the http result row by row                                              */\n/* ----------------------------------------------------------------------- */\n%macro mergeInOut();\n\tdata &_outputtable;\n\t  if (eof1 and eof2) then stop;\n\t  if not eof1 then set &_inputtable end=eof1 ;\n\t  if not eof2 then set &_outputtable end=eof2 ;\n\t  output;\n\t  call missing(of _all_);\n\trun;\n%mend mergeInOut;\n\n\n/* ----------------------------------------------------------------------- */\n/* Map the HTTP result header to SAS variables according to the            */ \n/* Header Mapping section in the UI                                        */\n/* ----------------------------------------------------------------------- */\n%macro mapHeaderTag(mapline);\n\t%put ==> Mapping HTTP result header to macro variable;\n\tfilename PCODE TEMP;\n\tdata _null_;\n\t\tfile PCODE;\n\t\tput\"SAS.symput('mapKeyError_','No')\";\n\t\tput\"SAS.symput('mapKeyErrorMsg_', '')\";\n\t\tput\"SAS.symput('mapKeyErrorMsg2_', '')\";\n\t\tput\"mapToken= True\";\n\t\tput\" \";\n\t\tput\"mapline= int(SAS.symget('mapline'))\";\n\t\tput\"headerMappingIn= str(SAS.symget(f'_headerMapping_{mapline}'))\";\n\t\tput\"tagCaseSensetive= int(SAS.symget('_tagCaseSensetive'))\";\n\t\tput\"headerMapping= headerMappingIn.split(':')\";\n\t\tput\" \";\n\t\tput\"tagCaseSensetive= 0\";\n\t\tput\"tag= headerMapping[0].strip()\";\n\t\tput\"try:\";\n\t\tput\"    macro= headerMapping[1].strip()\";\n\t\tput\"except:\";\n\t\tput\"    print(f\"\"Error in header mapping line {mapline+1}: >\"\" +SAS.symget(f'_headerMapping_{mapline}') +\"\"<\"\")\";\n\t\tput\"    print('Check that tag and macro are mapped correctly.')\";\n\t\tput\"    SAS.symput('mapKeyError_','E')\";\n\t\tput\"    SAS.symput('mapKeyErrorMsg_', f\"\"Error in header mapping line {mapline+1}: >\"\" +SAS.symget(f'_headerMapping_{mapline}') +\"\"<\"\")\";\n\t\tput\"    SAS.symput('mapKeyErrorMsg2_', 'Check that tag and macro are mapped correctly.')\";\n\t\tput\"    mapToken= False\";\n\t\tput\" \";\n\t\tput\"#only continue if the token - macro mapping is ok\";\n\t\tput\"if mapToken:\";\n\t\tput\"    value= ''\";\n\t\tput\"    #read the header info file\";\n\t\tput\"    with open('/tmp/hdinfo.txt', 'r') as header:\";\n\t\tput\"        lines= header.readlines()\";\n\t\tput \" \";\n\t\tput\"    #go through the file and find the tag.\";\n\t\tput\"    for line in lines:\";\n\t\tput\"        line= line.strip()\";\n\t\tput\"        if tagCaseSensetive:\";\n\t\tput\"            if tag == line[0:len(tag)]:\";\n\t\tput\"                value= line[len(tag)+1:].strip()\";\n\t\tput\"        else:\";\n\t\tput\"            if tag.lower() == line[0:len(tag)].lower():\";\n\t\tput\"                value= line[len(tag)+1:].strip()\";\n\t\tput\" \";\n\t\tput\"    #if tag was found map value to SAS macro\";\n\t\tput\"    if len(value) > 0:\";\n\t\tput\"        SAS.symput('macroName', macro)\";\n\t\tput\"        SAS.symput('macroValue', value)\";\n\t\tput\"    else:\";\n\t\tput\"        print(f'Warning: Could not find tag >{tag}< in header mapping line {mapline+1}')\";\n\t\tput\"        SAS.symput('mapKeyError_','W')\";\n\t\tput\"        SAS.symput('mapKeyErrorMsg_', f'Could not find tag >{tag}< in header mapping line {mapline+1}')\";\n\t\tput\"        SAS.symput('mapKeyErrorMsg2_', 'Make sure tag does exist.')\";\t\n\trun;\n\t\n\tproc python infile= PCODE; quit;\n\tfilename PCODE clear;\n\n\t/* only if we reveived a value we can make it global */\t\n\t%if &mapKeyError_ = No %then %do;\n\t\t/* output token and value to the log */\n\t\t%put &macroName => &macroValue;\n\t\t%global &macroName; \n\t\t%let &macroName= &macroValue;\n\t%end;\n\n\t%global mapKeyError mapKeyErrorMsg mapKeyErrorMsg2;\n\t%let mapKeyError= &mapKeyError_;\n\t%let mapKeyErrorMsg= &mapKeyErrorMsg_;\n\t%let mapKeyErrorMsg2= &mapKeyErrorMsg2_;\n%mend mapHeaderTag;\n\n\n/* +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */\n/* MAIN                                                                    */\n/* +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */\n%macro main();\n\t\t/* Check output folder if set to \"sasserver\" - if it was set in the UI*/\n\t%if &_http_output_dir ~= %then %do;\n\t\t%let outputFolder= %substr(&_http_output_dir, 11);\n\t\t%let folderserver= %substr(&_http_output_dir, 1, 9);\n\t\tdata _null_;\n\t\t\tfile print;\t\n\t\t\tfolderserver= \"&folderserver\";\n\t\t\tif folderserver ~= \"sasserver\" then do;\n\t\t\t\tput \"ERROR: Wrong output folder!\";\n\t\t\t\tput \"Please select a folder from sasserver not from sascontent.\";\n\t\t\t\terror \"ERROR: Wrong output folder! The folder needs to be on sasserver!\";\n\t\t\t\tabort;\n\t\t\tend;\n\t\trun;\n\t%end;\n\t%else %do;\n\t\t%let outputFolder= /tmp; /* default location for the http output files */\n\t%end;\n\n\t/* set the output name for the json file if it is not set in the UI */\n\t%if &_outputName = %then %do;\n\t\t%let _outputName= httpoutAll;\n\t%end;\n\n\t/* if _outputtable variable exists but has no value set to default value */\n\t%if %symexist(_outputtable) %then %do;\n\t\t%if &_outputtable = %then %do;\n\t\t\t%let _outputtable= _HTTP_RESULT; /* default value */\n\t\t%end;\n\t%end;\n\t%else %do;\n\t\t%let _outputtable= _HTTP_RESULT; /* default value */\n\t%end;\n\n\t/*we need to create an empty output table here to prevent an error in case _mergeInOut is ticked but there are no field mappings */\n\tdata &_outputtable;\n\trun;\n\n\t/* if we use an internal API, we have to generate the appropriate URL */\t\n\t%if &_isSASServiceURL = 1 %then %do;\n\t\t%generateInternalUrl();\n\t%end;\n\n\t/* prepare url for execution. We need to replace parameters with values is there are parameters in the url */\n\t%setParamaters(&_URL); /* build the dynamic url */\n\t%let url= &parsedString;\n\n\t%if &_method = PUT or &_method = POST or &_method = PATCH %then %do;\n\t\t%let payload= ;\n\t\t/* if there is a payload prepare it for execution. We need to replace parameters with values is there are parameters in the payload */\n\t\t%if &_payload ~= %then %do;\n\t\t\t%setParamaters(&_payload); /* build the dynamic payload. Replace parameters in payload with values*/\n\t\t\t%let payload= &parsedString;\n\t\t%end;\n\t%end;\n\n\t/* if input table variable does exist */\n\t%let isInputTable= No; /* indecate there is no input table */\n\t%if %symexist(_inputtable) %then %do;\n\t\t%if &_inputtable ~= %then %do; /* if there is data coming from an input table */\n\t\t\t%let isInputTable= Yes;\n\t\t\t%callRequestForInputTable(); /* call the http request for each row in the input table */\n\t\t%end;\n\t%end;\n\n\t/* if there is NO input table */\n\t%if &isInputTable = No %then %do;\n\t\t%let rowCnt= 1; /* need to set row count to 1 */\n\t\tdata _null_;\n\t\t\turl= &url; /* &url can either be the generated or the original url. */\n\t\t\tcall symput(\"exe_url\", cats(\"'\", trim(url), \"'\"));\n\n\t\t\t%if &_method = PUT or &_method = POST or &_method = PATCH %then %do;\n\t\t\t\tpayload= &payload;  /* &payload can either be the generated or the original payload */\n\t\t\t\tcall symput(\"exe_payload\", cats(\"'\", trim(payload), \"'\"));\n\t\t\t%end;\n\t\trun;\t\n\t\t%executeHTTP(1); /* need to set row count to 1 */\n\t%end;\n\n\t/* check the http staus here as otherwise we might no capture a potential error. */\n\t%checkHTTPStatus();\n\n\t%combineHTTPOutput(); /* put all json output (from each row in the input table) into one file */\n\n\t%outputToLibrary(); /* output http result to SAS lib */\n\n\t/* if &_fieldMapping in the UI has any input data we map the http result to output columns */\n\t%if &_fieldMapping ~= %then %do;\n\t\t%mapHTTPToColumns(); /* map http result */\n\t\t/* if anything went wrong with the mapping we raise an error */\n\t\t%checkError();\n\t\t/* if set in the ui create macros for the mapped output columns */\n\t\t%if &_outputToMacro = 1 %then %do;\n\t\t\t%mapMacros();\n\t\t%end;\n\t%end;\n\n\t/* if set in the ui merge http result and input table */\n\n\t%if &_mergeInOut = 1 %then %do;\n\t\t%mergeInOut();\n\t%end;\n\n\t/* read header output information and map to macros if required in the ui */\n\t%let i= 0;\n\t%do %while(&i < &_headerMappingCnt);\n\t\t%mapHeaderTag(&i);\n\t\t%checkError();\n\t\t%let i= %eval(&i+ 1);\n\t%end;\n%mend main;\n%main();\n\n/* +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */\n/* CLEAN UP                                                                */\n/* +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */\n/* ----------------------------------------------------------------------- */\n/* clean up macros variables used in this step                             */\n/* ----------------------------------------------------------------------- */\n%symdel url / nowarn;\n%symdel rowCnt / nowarn;\n%symdel exe_url / nowarn;\n%symdel outputFolder / nowarn;\n%symdel folderserver / nowarn;\n%symdel mapKeyError / nowarn;\n%symdel mapKeyErrorMsg / nowarn;\n%symdel mapKeyErrorMsg2 / nowarn;\n%symdel parsedString / nowarn;\n%symdel payload / nowarn;\n%symdel exe_payload / nowarn;\n%symdel isInputTable / nowarn;\n\n/* ----------------------------------------------------------------------- */\n/* clean up macros used in this step                                       */\n/* ----------------------------------------------------------------------- */\n%sysmacdelete main / nowarn;\n%sysmacdelete setParamaters / nowarn; \n%sysmacdelete callRequestForInputTable / nowarn;\n%sysmacdelete executeHTTP / nowarn;\n%sysmacdelete combineHTTPOutput / nowarn;\n%sysmacdelete mergeInOut / nowarn;\n%sysmacdelete mapHeaderTag / nowarn;\n%sysmacdelete checkError / nowarn;\n%sysmacdelete outputToLibrary / nowarn;\n%sysmacdelete mapHTTPToColumns / nowarn;\n%sysmacdelete generateInternalUrl / nowarn;\n%sysmacdelete checkHTTPStatus / nowarn;\n%sysmacdelete mapMacros / nowarn;\n"}}