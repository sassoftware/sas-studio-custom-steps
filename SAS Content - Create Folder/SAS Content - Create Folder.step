{"creationTimeStamp":"2023-12-15T18:55:19.161Z","modifiedTimeStamp":"2023-12-18T17:42:21.130Z","createdBy":"viya_admin","modifiedBy":"viya_admin","name":"SAS Content - Create Folder.step","displayName":"SAS Content - Create Folder.step","localDisplayName":"SAS Content - Create Folder.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","uri":"/dataFlows/steps/6aa54697-2b90-42b3-940c-0008674946b5","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"parameters\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"parentFolder\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Select parent folder inside SAS Content:\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"/Example/Public/Some_Folder\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"folderName\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"Specify name for new folder to create:\",\n\t\t\t\t\t\"placeholder\": \"New_Folder_\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"This is a utility custom step which allows you to create a new folder inside a SAS Content folder programmatically.\\n\\nSome SAS programs require operations to be performed on folders inside SAS Content, which is a file service and not a mounted file system on SAS Compute. Therefore you cannot use the dcreate() DATA step function and have to use the Viya folders service (REST API).   \",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step wraps proc http calls to a SAS Viya endpoint in order to check for as well as create a folder.  While it's likely that your environment's administrator has already ensured the same, please verify that north-south communication among pods is enabled / whitelisted in your environment.  Proc http won't work for Viya endpoints (though they may for other endpoints) in such a case.  Viya may consider the SAS Studio session pod IP (which is making the call) as not recognizable and therefore timeout the request.  A quick check for this would be to run a simple proc http call (e.g. a get request) to your SAS Viya endpoint and note if you are able to get a response code of 200 (OK).\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_input\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input Parameters\",\n\t\t\t\t\t\t\t\"open\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"input_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. A parent folder within SAS Content (folder selector, required): provide the full path of a folder under which you wish to create the new folder.\\n\\n2. Name for new folder (folder selector, required): specify a name for the new folder.  Adhere to the naming conventions for SAS Content folders.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_output_specs\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Specifications\",\n\t\t\t\t\t\t\t\"open\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"The custom step provides a note informing that the folder has been created. \\n\\n1. targetFolderURI (global macro variable): this macro variable is created to hold the URI of the new folder for any downstream activity.\\n\\n2. folderCreated (global macro variable): this macro variable is created with a value of 1 if the folder is created, or a value of 0 in case it isn't, for downstream code to consume.\\n\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_runtimecontrol\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Run-time Control\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"runtimecontrol_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Edit / keep this section only if you want to have a run-time control\\n\\nNote: Run-time control is optional.  You may choose whether to execute the main code of this step or not, based on upstream conditions set by earlier SAS programs.  This includes nodes run prior to this custom step earlier in a SAS Studio Flow, or a previous program in the same session.\\n\\nRefer this blog (https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526) for more details on the concept.\\n\\nThe following macro variable,\\n\\n_cf_run_trigger\\n\\nwill initialize with a value of 1 by default, indicating an \\\"enabled\\\" status and allowing the custom step to run.\\n\\nIf you wish to control execution of this custom step, include code in an upstream SAS program to set this variable to 0.  This \\\"disables\\\" execution of the custom step.\\n\\nTo \\\"disable\\\" this step, run the following code upstream:\\n\\n%global _cf_run_trigger;\\n%let _cf_run_trigger =0;\\n\\nTo \\\"enable\\\" this step again, run the following (it's assumed that this has already been set as a global variable):\\n\\n%let _cf_run_trigger =1;\\n\\nIMPORTANT: Be aware that disabling this step means that none of its main execution code will run, and any  downstream code which was dependent on this code may fail.  Change this setting only if it aligns with the objective of your SAS Studio program.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"1. SAS Viya REST API reference: https://developer.sas.com/apis/rest/CoreServices/#create-a-new-folder\\n\\n2. Note this section within the documentation on the filesrvc filename reference method.  Note that the filesrvc filename reference results in an automatically generated macro variable containing the URI, which is in fact used within this custom step.  However, the direct use of the filesrvc reference on a non-existent folder results in an error, which is handled by this custom step:  https://go.documentation.sas.com/doc/en/pgmsascdc/default/lestmtsglobal/p0qapul7pyz9hmn0zfoefj0c278a.htm#p0nscb67k9xhr5n1fqx4pvnoed4f\\n\\n3. Some \\\"SAS Content-related\\\" operations inspired by similar code by David Weik for the purpose of transferring custom steps.  His full code is located here:  https://github.com/Criptic/sas_snippets/blob/master/Upload-and-Register-all-Custom-Steps.sas\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"version_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.0  (18DEC2023)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Created/contact: \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"folderName\": \"New_Folder_\"\n\t}\n}","templates":{"SAS":"/* templated code goes here*/;\n\n/*-----------------------------------------------------------------------------------------*\n   START MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n/* -----------------------------------------------------------------------------------------* \n   Error flag for capture during code execution.\n*------------------------------------------------------------------------------------------ */\n\n%global _cf_error_flag;\n%let _cf_error_flag=0;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Global macro variable for the trigger to run this custom step. A value of 1 \n   (the default) enables this custom step to run.  A value of 0 (provided by upstream code)\n   sets this to disabled.\n*------------------------------------------------------------------------------------------ */\n\n%global _cf_run_trigger;\n\n%if %sysevalf(%superq(_cf_run_trigger)=, boolean)  %then %do;\n\n\t%put NOTE: Trigger macro variable _cf_run_trigger does not exist. Creating it now.;\n    %let _cf_run_trigger=1;\n\n%end;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to identify whether a given folder location provided from a \n   SAS Studio Custom Step folder selector happens to be a SAS Content folder\n   or a folder on the filesystem (SAS Server).\n\n   Inputs:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Outputs:\n   1. _path_identifier: Set inside macro, a global variable indicating the prefix of the \n      path provided.\n\n*------------------------------------------------------------------------------------------ */\n\n%macro _identify_content_or_server(pathReference);\n   %global _path_identifier;\n   data _null_;\n      call symput(\"_path_identifier\", scan(\"&pathReference.\",1,\":\",\"MO\"));\n   run;\n%mend _identify_content_or_server;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to extract the path provided from a SAS Studio Custom Step file or folder selector.\n\n   Inputs:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Outputs:\n   1. _sas_folder_path: Set inside macro, a global variable containing the path.\n\n*------------------------------------------------------------------------------------------ */\n\n%macro _extract_sas_folder_path(pathReference);\n   %global _sas_folder_path;\n   data _null_;\n      call symput(\"_sas_folder_path\", scan(\"&pathReference.\",2,\":\",\"MO\"));\n   run;\n%mend _extract_sas_folder_path;\n\n\n/*-----------------------------------------------------------------------------------------*\n    Macro to obtain the URI of a desired SAS Content folder if it exists.\n    This macro will check a given path in SAS Content and set a macro variable to folder URI \n    if it exists, or a direction to the error code if not.\n \n    Inputs:\n       1. targetFolderContent: the full path of the folder to check for\n \n    Outputs:\n       1. targetFolderURI (global variable): set inside macro to the URI of the folder\n       2. contentFolderExists (global variable): set to 0 if the folder does not exist, 1 if\n         it does, and 99 in case of other conditions (such as HTTP request failure). \n         Note this is a side objective / additional objective of the current macro.\n\n    Also available standalone at: \n    https://github.com/SundareshSankaran/sas_utility_programs/blob/main/code/Get%20SAS%20Content%20Folder%20URI/macro_get_sas_content_folder_uri.sas\n*------------------------------------------------------------------------------------------*/\n\n%macro _get_sas_content_folder_uri(targetFolderContent);\n\n   %global targetFolderURI;\n   %global contentFolderExists;\n\n   /*-----------------------------------------------------------------------------------------*\n     Create a JSON payload containing the folder to check for.\n   *------------------------------------------------------------------------------------------*/\n   %local targetPathJSON;\n\n   data _null_;\n      call symput(\"targetPathJSON\",'{\"items\": ['||'\"'||transtrn(strip(transtrn(&targetFolderContent.,\"/\",\"   \")),\"   \",'\",\"')||'\"'||'], \"contentType\": \"folder\"}');\n   run;\n\n   filename pathData temp;\n   filename outResp temp;\n\n   data _null_;\n      length inputData $32767.;\n      inputData = symget(\"targetPathJSON\");\n      file pathData;\n\t  put inputData;\n   run;\n\n   /*-----------------------------------------------------------------------------------------*\n     Call the /folders/paths endpoint to obtain the URI of the desired folder.\n   *------------------------------------------------------------------------------------------*/\n   %local viyaHost;\n   %let viyaHost=%sysfunc(getoption(SERVICESBASEURL));\n\n   %put NOTE: The Viya host resolves to &viyaHost.;\n\n   proc http\n\t  method='POST'\n\t  url=\"&viyaHost./folders/paths\"\n\t  in=pathData \n\toauth_bearer=sas_services\n \tout=outResp;\n    ;\n\theaders 'Content-Type'='application/vnd.sas.content.folder.path+json';\n   quit;\n   \n   filename pathData clear;\n   filename outResp clear;\n\n   /*-----------------------------------------------------------------------------------------*\n     In the event of a successful request, extract the URI\n   *------------------------------------------------------------------------------------------*/\n\n   %if \"&SYS_PROCHTTP_STATUS_CODE.\"=\"200\" %then %do;\n\n      filename TEMPFNM filesrvc folderpath=&targetFolderContent.;\n\n    /*-----------------------------------------------------------------------------------------*\n      The Filename Filesrvc leads to an automatic macro variable which holds the URI.  This \n      will be assigned to the global variable.\n    *------------------------------------------------------------------------------------------*/\n      data _null_;\n\t     call symput(\"targetFolderURI\", \"&_FILESRVC_TEMPFNM_URI.\");\n         call symputx(\"contentFolderExists\", 1);\n      run;\n\n      filename TEMPFNM clear;\n      %symdel _FILESRVC_TEMPFNM_URI;\n\n   %end;\n   %else %do;\n\n      data _null_;\n         call symput(\"targetFolderURI\", \"Refer SYS_PROCHTTP_STATUS_CODE macro variable.\");\n         call symputx(\"_cf_error_flag\",1);\n      run;\n\n      /*-----------------------------------------------------------------------------------------*\n         Note that this macro also doubles up as a check for a desired folder inside \n         SAS Content.  While it's desirable to have separate code/macros for every single desired \n         operation, we are adding this additional output because it does not require significant \n         computation (beyond the code below).\n      *------------------------------------------------------------------------------------------*/\n\n      %if \"&SYS_PROCHTTP_STATUS_CODE.\"=\"404\" %then %do;\n\n         %put NOTE: Folder is not found. ;\n         data _null_;\n            call symputx(\"contentFolderExists\",0);\n         run;\n\n      %end;\n      %else %do;\n\n         %put ERROR: The HTTP request returned &SYS_PROCHTTP_STATUS_CODE. ;\n         data _null_;\n            call symputx(\"contentFolderExists\",99);\n         run;\n\n      %end;\n   %end;\n\n%mend _get_sas_content_folder_uri;\n\n\n/*-----------------------------------------------------------------------------------------*\n   This macro will create a desired SAS Content folder based on given parameter.\n   Inputs:\n      1. parentFolderURI: URI of the parent folder to the desired folder\n      2. folderName: Desired name for the folder to be created\n\n   Outputs:\n      1. targetFolderURI: Global variable containing URI of the folder that gets created.\n      2. folderCreated: Indicates that the folder got created (1) or not (0).\n\n   The system macro variable  SYS_PROCHTTP_STATUS_CODE is surfaced within the log for \n   debugging.\n*------------------------------------------------------------------------------------------*/\n\n%macro _create_sas_content_folder(parentFolderURI,folderName);\n\n   /*-----------------------------------------------------------------------------------------*\n     Create a JSON payload containing the folder to check for.\n   *------------------------------------------------------------------------------------------*/\n\n   %global folderCreated;\n   %global targetFolderURI;\n   %local targetPathJSON;\n   %local folderNameNew;\n   %local viyaHost;\n   %local newFolderPath;\n\n   data _null_;\n      call symput(\"targetPathJSON\",'{\"name\": \"'||&folderName.||'\",\"type\": \"folder\"}');\n      call symput(\"folderNameNew\",compress(&folderName.,'\"'));\n   run;\n\n   filename pathData temp;\n   filename outResp temp;\n\n   data _null_;\n      length inputData $32767.;\n      inputData = symget(\"targetPathJSON\");\n      file pathData;\n\t  put inputData;\n   run;\n\n   /*-----------------------------------------------------------------------------------------*\n     Call the /folders/paths endpoint to obtain the URI of the desired folder.\n   *------------------------------------------------------------------------------------------*/\n\n   %let viyaHost=%sysfunc(getoption(SERVICESBASEURL));\n\n   %put NOTE: The Viya host resolves to &viyaHost.;\n\n   proc http\n\t  method='POST'\n\t  url=\"&viyaHost./folders/folders?parentFolderUri=&parentFolderUri.\"\n\t  in=pathData \n\toauth_bearer=sas_services\n\tout=outResp;\n    ;\n\theaders 'Content-Type'='application/vnd.sas.content.folder+json';\n    headers 'Accept'='application/vnd.sas.content.folder+json';\n   quit;\n\n   filename pathData clear;\n   filename outResp clear;\n   \n   %if \"&SYS_PROCHTTP_STATUS_CODE.\"=\"201\" %then %do;\n\n      %put NOTE: Folder has been created.;\n      %let newFolderPath=%sysfunc(scan(\"&parentFolder./&folderNameNew.\",2,\":\"));\n\n      filename TEMPFNM filesrvc folderpath=\"&newFolderPath.\";\n\n    /*-----------------------------------------------------------------------------------------*\n      The Filename Filesrvc leads to an automatic macro variable which holds the URI.  This \n      will be assigned to the global variable.\n    *------------------------------------------------------------------------------------------*/\n      data _null_;\n\t     call symput(\"targetFolderURI\", \"&_FILESRVC_TEMPFNM_URI.\");\n         call symputx(\"folderCreated\", 1);\n      run;\n\n      filename TEMPFNM clear;\n      %symdel _FILESRVC_TEMPFNM_URI;\n\n   %end;\n   %else %if \"&SYS_PROCHTTP_STATUS_CODE.\"=\"409\" %then %do;\n      \n      %put ERROR: Folder already exists. Check location or name.;\n      %put ERROR: The SYS_PROCHTTP_STATUS_CODE. macro variable is &SYS_PROCHTTP_STATUS_CODE.;\n\n      data _null_;\n\t     call symput(\"targetFolderURI\", \" \");\n         call symputx(\"folderCreated\", 0);\n         call symputx(\"_cf_error_flag\",1);\n      run;\n\n   %end;\n   %else %if \"&SYS_PROCHTTP_STATUS_CODE.\"=\"403\" %then %do;\n      \n      %put ERROR: This operation seems forbidden. Check if you have the correct permissions to create a folder inside the parent folder.;\n      %put ERROR: The SYS_PROCHTTP_STATUS_CODE. macro variable is &SYS_PROCHTTP_STATUS_CODE.;\n\n      data _null_;\n\t     call symput(\"targetFolderURI\", \" \");\n         call symputx(\"folderCreated\", 0);\n         call symputx(\"_cf_error_flag\",1);\n      run;\n\n   %end;\n   %else %do;\n      %put ERROR: The SYS_PROCHTTP_STATUS_CODE. macro variable is &SYS_PROCHTTP_STATUS_CODE.;\n      data _null_;\n\t     call symput(\"targetFolderURI\", \" \");\n         call symputx(\"folderCreated\", 0);\n         call symputx(\"_cf_error_flag\",1);\n      run;\n   %end;\n\n%mend _create_sas_content_folder;\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE MACRO \n*------------------------------------------------------------------------------------------*/\n\n%macro _cf_main_execution_code;\n\n   %local sasFolderPath;\n   %local parentFolderURI;\n   %local _cf_folder_first_char;\n\n   /*-----------------------------------------------------------------------------------------*\n      Reset values of existing global variables (targetFolderURI and contentFolderExists) to \n      zero, in case this custom step or macro had been used before.  Users may like to \n      save the values of these global variables prior to running this step.\n   *------------------------------------------------------------------------------------------*/\n\n   %if %symexist(targetFolderURI) %then %do;\n      %let targetFolderURI=;\n   %end;\n\n   %if %symexist(contentFolderExists) %then %do;\n      %let contentFolderExists=;\n   %end;\n\n   %if %symexist(folderCreated) %then %do;\n      %let folderCreated=;\n   %end;\n\n   /*-----------------------------------------------------------------------------------------*\n      Check if the folder path provided is in fact a SAS Content related path.\n   *------------------------------------------------------------------------------------------*/\n\n   %_identify_content_or_server(&parentFolder.);\n\n   %if \"&_path_identifier.\"=\"sascontent\" %then %do;\n      %put NOTE: The path provided is prefixed with &_path_identifier. ;\n   %end;\n   %else %do;\n      %let _cf_error_flag=1;\n      %put ERROR: Path provided does not seem to be a SAS Content folder. Check your path. ;\n   %end;\n\n   %if &_cf_error_flag. = 0 %then %do;\n\n   /*-----------------------------------------------------------------------------------------*\n      Extract the folder path from the path reference provided.\n   *------------------------------------------------------------------------------------------*/\n\n      %_extract_sas_folder_path(&parentFolder.);\n      %let sasFolderPath=&_sas_folder_path.;\n      %symdel _sas_folder_path;\n\n   /*-----------------------------------------------------------------------------------------*\n      Check for failure modes such as root folder, missing or improperly structured path.\n   *------------------------------------------------------------------------------------------*/\n\n      %let _cf_folder_first_char=%qsubstr(&sasFolderPath.,1,1);\n\n      %if %sysfunc(compress(\"&sasFolderPath.\")) = \"/\" %then %do;\n         %put ERROR: The folder cannot be the root folder.  Select a folder within SAS Content.;\n         data _null_;\n            call symputx(\"_cf_error_flag\",1);\n         run;\n      %end;\n      %else %if %sysfunc(compress(\"&sasFolderPath.\")) = \"\" %then %do;\n         %put ERROR: The folder cannot be blank.  Select an existing folder within SAS Content. The current path provided is: &sasFolderPath. ;\n         data _null_;\n            call symputx(\"_cf_error_flag\",1);\n         run;\n      %end;\n      %else %if \"&_cf_folder_first_char.\" ne \"/\" %then %do;\n         %put ERROR: The folder path needs to start with a /. The current path provided is: &sasFolderPath. ;\n         data _null_;\n            call symputx(\"_cf_error_flag\",1);\n         run;\n      %end;\n      %else %do;\n\n         %_get_sas_content_folder_uri(\"&sasFolderPath.\");\n      \n      /*-----------------------------------------------------------------------------------------*\n         Treat for non-existent folder.\n      *------------------------------------------------------------------------------------------*/\n         %if &contentFolderExists. = 0 %then %do;\n            %put ERROR: Cannot create folder because parent folder (&sasFolderPath.) does not exist or may not be accessible by the user. ;\n         %end;\n      \n      %end;     \n\n\n\n   %end;\n\n   %if &_cf_error_flag. = 0 %then %do;\n      \n      %let parentFolderURI = &targetFolderURI.;\n      %_create_sas_content_folder(&parentFolderURI.,\"&folderName.\");\n      \n   %end;\n\n%mend _cf_main_execution_code;\n\n/*-----------------------------------------------------------------------------------------*\n   END MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE\n   The execution code is controlled by the trigger variable defined in this custom step. This\n   trigger variable is in an \"enabled\" (value of 1) state by default, but in some cases, as \n   dictated by logic, could be set to a \"disabled\" (value of 0) state.\n*------------------------------------------------------------------------------------------*/\n\n%if &_cf_run_trigger. = 1 %then %do;\n\n   %_cf_main_execution_code;\n\n%end;\n%if &_cf_run_trigger. = 0 %then %do;\n\n   %put NOTE: This step has been disabled.  Nothing to do.;\n\n%end;\n\n\n/*-----------------------------------------------------------------------------------------*\n   Clean up existing macro variables and macro definitions.\n*------------------------------------------------------------------------------------------*/\n%if %symexist(_cf_error_flag) %then %do;\n   %symdel _cf_error_flag;\n%end;\n%if %symexist(sasFolderPath) %then %do;\n   %symdel sasFolderPath;\n%end;\n%if %symexist(_cf_folder_first_char) %then %do;\n   %symdel _cf_folder_first_char;\n%end;\n%if %symexist(_cf_run_trigger) %then %do;\n   %symdel _cf_run_trigger;\n%end;\n\n\n%sysmacdelete _identify_content_or_server;\n%sysmacdelete _extract_sas_folder_path;\n%sysmacdelete _get_sas_content_folder_uri;\n%sysmacdelete _create_sas_content_folder;\n%sysmacdelete _cf_main_execution_code;"}}