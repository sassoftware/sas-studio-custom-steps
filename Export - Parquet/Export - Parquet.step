{"creationTimeStamp":"2023-12-04T17:11:20.393Z","modifiedTimeStamp":"2023-12-15T19:25:32.969Z","createdBy":"Neil.Griffin@sas.com","modifiedBy":"Neil.Griffin@sas.com","name":"Export - Parquet.step","displayName":"Export - Parquet.step","localDisplayName":"Export - Parquet.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","uri":"/dataFlows/steps/7b8bcf9d-2cc1-42e1-85f2-d939cb6e900e","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inTable","displayName":"Input table","localDisplayName":"Input table","description":"Input table","localDescription":"Input table","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"options\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Export options\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Select an input table:\",\n\t\t\t\t\t\"required\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"folder\",\n\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\"label\": \"Export folder:\",\n\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"deleteIfExists\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Delete output data if it already exists\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"partition_type\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Partition type:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"None\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"DIRECTORY\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"FILENAME\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"HIVE\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"partition_by\",\n\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\"label\": \"Partition by:\",\n\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\"columntype\": \"a\",\n\t\t\t\t\t\"max\": null,\n\t\t\t\t\t\"min\": null,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\"$partition_type\",\n\t\t\t\t\t\t\"!=\",\n\t\t\t\t\t\t\"None\"\n\t\t\t\t\t],\n\t\t\t\t\t\"table\": \"inTable\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"file_name_extension\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"File name extension (non-partitioned data only):\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\"$partition_type\",\n\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\"None\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"compress\",\n\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\"label\": \"Compression type:\",\n\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"BROTLI\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"GZIP\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"LZ4\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"LZ4_HADP\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"SNAPPY\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"value\": \"ZSTD\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"exportCharAsString\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Export SAS character columns as Parquet STRING logical type\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutDescription\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Export - Parquet\\n\\nThe Export - Parquet custom step allows SAS Studio users to export a SAS dataset to Parquet file(s) on a file system using the SAS Viya LIBNAME Engine for Parquet.\\n\\nAll relevant LIBNAME options (folder, compression type, filename extension) and data set options (partition type, partition by) are available in the custom step dialog.\\n\\nThe custom step also includes options to:\\n- Delete output data if it already exists\\n- Cast SAS character variables to Parquet logical STRING type for compatibility with other Parquet data consumers\\n\\nIf the Python PyArrow module is available, the Parquet schema and files metadata will be reported in the log.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutLimitations\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Limitations\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutLimitationsText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"- Does not support export to AWS S3, ADLS or GCS object storage. For export to ADLS, do check out the ADLS File Writer custom step by Alfredo Lorie\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutDocumentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"The SAS Viya LIBNAME Engines for Parquet documentation can be found here:\\n\\nhttps://go.documentation.sas.com/doc/da/pgmsascdc/default/enghdff/titlepage.htm\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutRequirements\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Requirements\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutRequirementsText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Tested on SAS Viya version Stable 2023.11, with Python 3.9.16 and PyArrow 13.0.0.\\n\\n- Requires SAS Viya 2023.10 or above (the DBTYPE option was added in 2023.10)\\n- Python must be configured on the SAS Viya platform\\n- PyArrow is not required, but if module is installed, Parquet metadata will be reported in the log\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutUsage\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Usage\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutUsageText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Custom step options\\n\\nInput table\\nDefault: None\\nDescription: Input table, connect using the input port in the Flow\\n\\nExport folder\\nDefault: None\\nTarget folder for the output data. See notes on output file naming below\\n\\nDelete output data if it already exists\\nDefault: True\\nThe target location must be empty for partitioned data. Check this box to delete data in the export folder if it exists\\n\\nPartition type\\nDefault: None\\nDescription: Can be DIRECTORY, FILENAME, HIVE. Details in the PARTITION_TYPE option documentation\\n\\nPartition by\\nDefault: -\\nDescription: One or more columns that determine the table's partitions. Details in the PARTITION_BY option documentation\\n\\nFile name extension (non-partitioned data only)\\nDefault: parquet\\nDescription: Specifies the file extension for SAS to write Parquet files. Details in the FILE_NAME_EXTENSION option documentation\\n\\nCompression type\\nDefault: SNAPPY\\nDescription: Controls the compression type. Details in the COMPRESS option documentation\\n\\nExport SAS character columns as Parquet STRING logical type\\nDefault: True\\nDescription: If set, this option will cast SAS dataset character variables to Parquet STRING logical type. (By default, the SAS LIBNAME Engines for Parquet uses a BYTE_ARRAY)\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutOutput\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Output\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"If the SASHELP.PRDSAL3 data set is exported to the folder /shared-data/pqt, the following files are created with each partition type:\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputNone\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"None\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"aboutOutputNoneText\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"./prdsal3.parquet\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputDirectory\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"DIRECTORY\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"aboutOutputDirectoryText\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"./prdsal3/Canada/part0.parquet\\n./prdsal3/Mexico/part0.parquet\\n./prdsal3/U.S.A./part0.parquet\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputFilename\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"FILENAME\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"aboutOutputFilenameText\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"./prdsal3/Canada_part0.parquet\\n./prdsal3/Mexico_part0.parquet\\n./prdsal3/U.S.A._part0.parquet\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutOutputHive\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"HIVE\",\n\t\t\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"aboutOutputHiveText\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"./prdsal3/COUNTRY=Canada/part0.parquet\\n./prdsal3/COUNTRY=Mexico/part0.parquet\\n./prdsal3/COUNTRY=U.S.A./part0.parquet\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"aboutChangelog\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Change Log\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"aboutChangelogText\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Version: 1.0 (15DEC2023)\\n\\nCreated/contact: \\n- Neil Griffin (neil.griffin@sas.com)\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"folder\": \"\",\n\t\t\"deleteIfExists\": true,\n\t\t\"partition_type\": {\n\t\t\t\"value\": \"None\"\n\t\t},\n\t\t\"partition_by\": [],\n\t\t\"file_name_extension\": \"parquet\",\n\t\t\"compress\": {\n\t\t\t\"value\": \"SNAPPY\"\n\t\t},\n\t\t\"exportCharAsString\": true\n\t}\n}","templates":{"SAS":"* -----------------------------------------------------------------------------;\n* Export SAS dataset to Parquet;\n*;\n* SAS Viya LIBNAME Engines for ORC and Parquet: Reference;\n* https://go.documentation.sas.com/doc/en/pgmsascdc/default/enghdff/titlepage.htm;\n* -----------------------------------------------------------------------------;\n\n* Print macro variables passed from custom step;\n/*\n%put NOTE: &=inTable;\n%put NOTE: &=folder;\n%put NOTE: &=deleteIfExists;\n%put NOTE: &=partition_type;\n%put NOTE: &=partition_by;\n%put NOTE: &=file_name_extension;\n%put NOTE: &=compress;\n%put NOTE: &=exportCharAsString;\n*/\n\n* -----------------------------------------------------------------------------;\n* Parse the folder value to get the path;\n* -----------------------------------------------------------------------------;\n\ndata _null_;\n  if index(\"&folder\",\":\")>0 then do;\n    store=scan(\"&folder\",1,\":\");\n    if store=\"sasserver\" then do;\n      * OK - User used Folder Selector Control to choose sasserver folder;\n      errorFlag=0;\n      call symput(\"folderLoc\",scan(\"&folder\",2,\":\"));\n    end;\n    else if store=\"sascontent\" then do;\n      * Error - User used Folder Selector Control to choose sascontent folder;\n      errorFlag=1;\n    end;\n  end;\n  else if substr(\"&folder\",1,1)=\"/\" then do;\n    * User manually entered path;\n    errorFlag=0;\n    call symput(\"folderLoc\",\"&folder\");\n  end;\n  else errorFlag=1;\n  call symput(\"errorFlag\",trim(put(errorFlag,4.-l)));\nrun;\n\n%if &errorFlag %then %do;\n  %put ERROR: The export folder must be on the file system, not in SAS Content.;\n%end;\n%else %do;\n  *%put NOTE: &=folderLoc;\n%end;\n\n* -----------------------------------------------------------------------------;\n* Delete existing folders / files;\n* -----------------------------------------------------------------------------;\n\n%if &errorFlag=0 %then %do;\nproc python;\nsubmit;\nimport os\nimport shutil\n\n# Get SAS macro variables\nfolderLoc = SAS.symget('folderLoc')\ndeleteIfExists = int(SAS.symget('deleteIfExists'))\ninTable_name = SAS.symget('inTable_name').lower()\npartition_type = SAS.symget('partition_type')\nfile_name_extension = SAS.symget('file_name_extension')\n\n# Set target file / folder flag exists to 0\ntargetExists = 0\n\nif partition_type in ('DIRECTORY', 'FILENAME', 'HIVE'):\n  # Delete folder-based data\n  fname = f'{folderLoc}/{inTable_name}'\n  if os.path.isdir(fname):\n    if deleteIfExists == 1:\n      shutil.rmtree(fname)\n      print(f'Deleted folder {fname}')\n    else:\n      targetExists = 1\nelif partition_type in ('None'):\n  # Delete file-based data\n  fname = f'{folderLoc}/{inTable_name}.{file_name_extension}'\n  if os.path.exists(fname):\n    if deleteIfExists == 1:\n      os.remove(fname)\n      print(f'Deleted file {fname}')\n    else:\n      targetExists = 1\n\n# Create SAS macro variable with target file / folder exists flag\nrc = SAS.symput('targetExists',str(targetExists))\n\nendsubmit;\nrun;\n%end;\n%else %do;\n  %let targetExists=0;\n%end;\n\n*%put NOTE: &=targetExists;\n%if &targetExists %then %do;\n  * If the export file / folder exists, stop further processing;\n  %put ERROR: Export file / folder exists. Check the 'Delete output data if it already exists' box or delete manually.; \n  %let errorFlag=1;\n%end;\n*%put NOTE: &=errorFlag;\n\n* -----------------------------------------------------------------------------;\n* Create LIBNAME statement options;\n* -----------------------------------------------------------------------------;\n\ndata _null_;\n  attrib liboptions length=$128;\n  liboptions=\"compress=&compress\";\n  if \"&partition_type\"=\"None\" then do;\n    liboptions=trim(liboptions)!!\" file_name_extension=(&file_name_extension)\";\n  end;\n  call symput(\"libOptions\",trim(left(liboptions)));\nrun;\n*%put NOTE: &=libOptions;\n\n* -----------------------------------------------------------------------------;\n* Create Data Set options;\n* -----------------------------------------------------------------------------;\n\n* If SAS characters are to be converted to Parquet STRING logical type;\n%if &exportCharAsString %then %do;\n  * Get count of character columns in SAS dataset;\n  proc sql noprint;\n    select count(*) into: nCharColumns\n    from dictionary.columns\n    where libname=\"&inTable_lib\" and memname=\"&inTable_name\" and type=\"char\";\n  quit;\n  \n  * Create data set DBTYPE option syntax to set Parquet logical type to STRING;\n  proc sql noprint;\n    select trim(name)!!\"=string\" into: dbtype separated by \" \"\n    from dictionary.columns\n    where \n      libname=\"&inTable_lib\" and \n      memname=\"&inTable_name\" and\n      type=\"char\";\n  quit;\n%end;\n%else %do;\n  %let nCharColumns=0;\n  %let dbtype=;\n%end;\n*%put NOTE: &=nCharColumns;\n*%put NOTE: &=dbtype;\n\n* Create dataset options for export;\ndata _null_;\n  attrib dsoptions length=$16384;\n  * PARTITION_TYPE and PARTITION_BY options;\n  if \"&partition_type\" ne \"None\" then do;\n    dsoptions=trim(dsoptions)!!\"partition_type=&partition_type\";\n    if \"&partition_by\" ne \"\" then do;\n      dsoptions=trim(dsoptions)!!\" partition_by=(&partition_by)\";\n    end;\n  end;\n  * DBTYPE option;\n  if &exportCharAsString and &nCharColumns>0 then do;\n    dsoptions=trim(dsoptions)!!\" dbtype=(&dbtype)\";\n  end;\n  * Combine PARTITION_TYPE, PARTITION_BY and DBTYPE options into a;\n  * single dsoptions macro variable;\n  if dsoptions ne \"\" then do;\n    call symput(\"dsOptions\",\"(\"!!trim(left(dsoptions))!!\")\");\n  end;\n  else do;\n    call symput(\"dsOptions\",\" \");\n  end;\nrun;\n*%put NOTE: &=dsOptions;\n\n* -----------------------------------------------------------------------------;\n* Export SAS dataset to Parquet;\n* -----------------------------------------------------------------------------;\n\n%if &errorFlag=0 %then %do;\n\n* Create a temporary libname for the export;\n*libname _pqt_ parquet \"&folderLoc\" compress=&compress file_name_extension=(&file_name_extension);\nlibname _pqt_ parquet \"&folderLoc\" &libOptions;\n%put NOTE: Use this libname syntax to read exported Parquet; %put NOTE: libname mypqt parquet \"&folderLoc\" &libOptions%str(;);\n\n* Do the export;\ndata _pqt_.%lowcase(&inTable_name) &dsOptions;\n  set &inTable;\nrun;\n\n* Clear the libname;\nlibname _pqt_ clear;\n\n%end;\n\n* -----------------------------------------------------------------------------;\n* Get exported Parquet file's metadata;\n* -----------------------------------------------------------------------------;\n\n%if &errorFlag=0 %then %do;\nproc python;\nsubmit;\n\ntry:\n  import pyarrow.parquet as pq\nexcept:\n  print('NOTE: PyArrow module not available, unable to report Parquet metadata')\nelse:\n  # Get SAS macro variables\n  folderLoc = SAS.symget('folderLoc')\n  partition_type = SAS.symget('partition_type')\n  file_name_extension = SAS.symget('file_name_extension')\n  inTable_name = (SAS.symget('inTable_name')).lower()\n  \n  if partition_type in ('DIRECTORY', 'FILENAME', 'HIVE'):\n    fname = f'{folderLoc}/{inTable_name}'\n  elif partition_type in ('None'):\n    fname = f'{folderLoc}/{inTable_name}.{file_name_extension}'\n  \n  ParquetDataset = pq.ParquetDataset(fname, use_legacy_dataset=False)\n  \n  print('-- Parquet schema:')\n  print(ParquetDataset.schema)\n  \n  print('-- Parquet file(s):')\n  for file in ParquetDataset.files:\n    print(file)\n\nendsubmit;\nrun;\n%end;\n\n* -----------------------------------------------------------------------------;\n* Delete macro variables;\n* -----------------------------------------------------------------------------;\n\n%if %symexist(errorFlag) %then %do;\n  %symdel errorFlag;\n%end;\n%if %symexist(folderLoc) %then %do;\n  %symdel folderLoc;\n%end;\n%if %symexist(targetExists) %then %do;\n  %symdel targetExists;\n%end;\n%if %symexist(libOptions) %then %do;\n  %symdel libOptions;\n%end;\n%if %symexist(dsOptions) %then %do;\n  %symdel dsOptions;\n%end;\n%if %symexist(nCharColumns) %then %do;\n  %symdel nCharColumns;\n%end;\n%if %symexist(dbtype) %then %do;\n  %symdel dbtype;\n%end;\n\n* -----------------------------------------------------------------------------;"}}